ax_search:
  num_sobol_trials: 20
  num_trials: 20
  parameters:
  - {name: model, type: fixed, value: simple}
  - is_ordered: true
    name: train.batch_size
    type: choice
    values: [32, 64, 128]
  - name: train.type
    type: choice
    values: [1vsAll, negative_sampling]
  - name: train.optimizer
    type: choice
    values: [AdamW,  Adamax, RMSprop]
  - name: train.loss
    type: fixed
    value: kl
  - bounds: [0.0003, 1.0]
    log_scale: true
    name: train.optimizer_args.lr
    type: range
  - {name: train.lr_scheduler, type: fixed, value: ReduceLROnPlateau}
  - {name: train.lr_scheduler_args.mode, type: fixed, value: max}
  - {name: train.lr_scheduler_args.factor, type: fixed, value: 0.5}
  - {name: train.lr_scheduler_args.threshold, type: fixed, value: 0.0001}
  - bounds: [9, 14]
    name: train.lr_scheduler_args.patience
    type: range
  - is_ordered: true
    name: lookup_embedder.dim
    type: choice
    values: [64, 96, 128, 160, 192, 224, 256]
  - name: lookup_embedder.initialize
    type: choice
    values: [xavier_normal_,  normal_, uniform_]
  - {name: lookup_embedder.initialize_args.normal_.mean, type: fixed, value: 0.0}
  - {log_scale: true, name: lookup_embedder.initialize_args.normal_.std, type: fixed,
    value: 0.006737}
  - {name: lookup_embedder.initialize_args.uniform_.a, type: fixed, value: -0.5}
  - {name: lookup_embedder.initialize_args.xavier_uniform_.gain, type: fixed, value: 1.0}
  - {name: lookup_embedder.initialize_args.xavier_normal_.gain, type: fixed, value: 1.0}
  - is_ordered: true
    name: lookup_embedder.regularize
    type: choice
    values: ['', l3, l2, l1]
  - name: lookup_embedder.regularize_args.weighted
    type: choice
    values: [true, false]
  - bounds: [1.0e-20, 0.1]
    log_scale: true
    name: simple.entity_embedder.regularize_weight
    type: range
  - bounds: [1.0e-20, 0.1]
    log_scale: true
    name: simple.relation_embedder.regularize_weight
    type: range
  - bounds: [0.0, 0.5]
    name: simple.entity_embedder.dropout
    type: range
  - bounds: [0.0, 0.5]
    name: simple.relation_embedder.dropout
    type: range
dataset.name: selfloops
eval: {batch_size: 256, metrics_per.relation_type: true}
import: [simple]
job.type: search
negative_sampling.implementation: sp_po
search.num_workers: 1
search.on_error: continue
search.type: ax
train: {auto_correct: true, subbatch_auto_tune: true}
valid:
  early_stopping: {min_threshold.epochs: 10, min_threshold.metric_value: 0.1, patience: 10}
  every: 5
  filter_with_test: true
  metric: mean_reciprocal_rank_filtered_with_test
